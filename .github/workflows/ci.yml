---
name: ðŸ“¦ CI

on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_IN_PROJECT: true
    strategy:
      matrix:
        distros:
          - geerlingguy/docker-centos7-ansible:latest
          - geerlingguy/docker-centos8-ansible:latest
          - ghcr.io/artis3n/docker-oraclelinux8-ansible:latest
          - geerlingguy/docker-amazonlinux2-ansible:latest
          - ghcr.io/artis3n/docker-ubuntu2104-ansible:latest
          - ghcr.io/artis3n/docker-ubuntu2010-ansible:latest
          - geerlingguy/docker-ubuntu2004-ansible:latest
          - geerlingguy/docker-ubuntu1804-ansible:latest
          - geerlingguy/docker-debian11-ansible:latest
          - geerlingguy/docker-debian10-ansible:latest
          - geerlingguy/docker-fedora31-ansible:latest
          # - ghcr.io/artis3n/docker-arch-ansible:latest
      fail-fast: false
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python 3.
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install poetry
        run: |
          pip -V
          python -m pip install --upgrade poetry
          poetry -V

      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry

      - name: Install all dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          poetry install

      - name: Security checks
        run: make security

      - name: Molecule test [${{ matrix.distros }}]
        # make test wraps 'molecule test --all' so it also does linting
        run: make test
        #working-directory: ansible_collections/donhector/workstation
        env:
          MOLECULE_DISTRO: "${{ matrix.distros }}"
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"

      - name: Automerge PR
        run: >-
          gh pr merge --auto --merge --delete-branch ${{ github.event.pull_request.number }}
        env:
          # If using the default ${{secrets.GITHUB_TOKEN}} merge works but branch is not deleted
          # had to use a Personal Access Token with full "repo" permissions
          # See https://github.com/cli/cli/issues/3884#issuecomment-868860269
          GITHUB_TOKEN: ${{ secrets.PAT_REPO_FULL }}
